<?xml version="1.0" encoding="UTF-8"?>
<ctrl:GridRepeater 
    xmlns="http://xamarin.com/schemas/2014/forms" 
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
    x:Class="Saplin.CPDT.UICore.TestResults" 
    xmlns:ctrl="clr-namespace:Saplin.CPDT.UICore.Controls"
    xmlns:anim="clr-namespace:Saplin.CPDT.UICore.Animations"
    xmlns:vm="clr-namespace:Saplin.CPDT.UICore.ViewModels"
    RowSpacing="0" RowHeight="Auto" HorizontalOptions="Fill" IsFooterVisible="{Binding ShowTestProgress}">
    <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
    </Grid.ColumnDefinitions>
    <ctrl:GridRepeater.ItemTemplate>
        <DataTemplate>
            <ctrl:GridItem>

                <Label Text="{Binding BulletPoint, StringFormat='{0}.'}" LineBreakMode="TailTruncation"/>

                <Label VerticalOptions="Start" LineBreakMode="TailTruncation">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding Result.TestName, Converter={StaticResource KeyToL11n}}" Style="{StaticResource SpanStyle}" />
                            <Span Text="(" Style="{StaticResource SmallSpan}" />
                            <Span Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, Block}" Style="{StaticResource SmallSpan}"/>
                            <Span Text="{Binding Result.BlockSizeBytes, StringFormat=' {0}', Converter={StaticResource BytesToAutoShort}}" Style="{StaticResource SmallSpan}"/>
                            <Span Text="{Binding Result.BlockSizeBytes, StringFormat='{0})', Converter={StaticResource BytesToAutoUnit}}" Style="{StaticResource SmallSpan}"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                
                <Label Grid.Column="3" Grid.ColumnSpan="2" Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, TestNotEnoughMemory}" LineBreakMode="TailTruncation" IsVisible="{Binding NotEnoughMemory}"/>

                <Label Grid.Column="3" Style="{StaticResource AccentedLabel}" LineBreakMode="TailTruncation" IsVisible="{Binding NotEnoughMemory, Converter={StaticResource BoolNot}}">
                    <Label.FormattedText >
                        <FormattedString>
                            <Span Text="{Binding Result.AvgThroughput, Converter={StaticResource MbPerSecondToAuto}}" />
                            <Span Text="{Binding Result.AvgThroughput, Converter={StaticResource MbPerSecondToAutoUnit}}" Style="{StaticResource AccentedSmallSpan}"  />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <Label Style="{StaticResource SmallLabel}" Grid.Column="4" LineBreakMode="TailTruncation" IsVisible="{Binding NotEnoughMemory, Converter={StaticResource BoolNot}}">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, Min, StringFormat='{0}: '}"/>
                            <Span Text="{Binding Result.Min, Converter={StaticResource MbPerSecondToAuto}}" Style="{StaticResource SpanStyle}" />
                            <Span Text="{Binding Result.Min, Converter={StaticResource MbPerSecondToAutoUnit}}" Style="{StaticResource AccentedSmallSpan}" />
                            <Span Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, Max, StringFormat=' Ã· {0}: '}"/>
                            <Span Text="{Binding Result.Max, Converter={StaticResource MbPerSecondToAuto}}" Style="{StaticResource SpanStyle}" />
                            <Span Text="{Binding Result.Max, Converter={StaticResource MbPerSecondToAutoUnit}}" Style="{StaticResource AccentedSmallSpan}"  />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>

            </ctrl:GridItem>
        </DataTemplate>
    </ctrl:GridRepeater.ItemTemplate>
    <ctrl:GridRepeater.FooterTemplate>
        <DataTemplate>
            <ctrl:GridItem>
                <!-- col 0-->
                <Label Text="â† "/>
                <!-- col 1-->
                <Label VerticalOptions="Start" LineBreakMode="TailTruncation" Grid.Column="1" > 
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding CurrentTest, Converter={StaticResource KeyToL11n}, Mode=OneWay}" Style="{StaticResource SpanStyle}" />
                            <Span Text="(" Style="{StaticResource SmallSpan}" />
                            <Span Text="{Binding Block, Mode=OneWay, Source={x:Static vm:ViewModelContainer.L11n}}" Style="{StaticResource SmallSpan}" />
                            <Span Text="{Binding BlockSizeBytes, Mode=OneWay, StringFormat=' {0}', Converter={StaticResource BytesToAutoShort}}" Style="{StaticResource SmallSpan}" />
                            <Span Text="{Binding BlockSizeBytes, Mode=OneWay, StringFormat='{0})', Converter={StaticResource BytesToAutoUnit}}" Style="{StaticResource SmallSpan}" />
                            <Span Text=" " Style="{StaticResource SmallSpan}" />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                
                <Label x:Name="statusBadge" IsVisible="{Binding TestStarted}" TextColor="Orange" Text="ðŸ”¥" Opacity="0.5" Grid.Column="2" HorizontalOptions="Center" LineBreakMode="TailTruncation"/>  
                <anim:BounceAnimation x:Name="badgeAnimation" Target="{x:Reference statusBadge}" />

                <Label Text="{Binding TestStatusMessage}" IsVisible="{Binding ShowTestStatusMessage}" Style="{StaticResource GrayedLabel}" HorizontalOptions="Fill" LineBreakMode="TailTruncation" Grid.Column="3" Grid.ColumnSpan="2"/>

                <!-- 
                There's a bug in Xamarin.Platform.WPF and LabelRenderre in case a Label is created with IsVisible=false (e.g. the bellow example in First version was created as invisible)
                in some cases within Grid Layout while measuring the contol in it's internals, System.OutOfMemoryExpcetion could occur. Investigation showed this was due to
                endless loop at Xamarin.Forms.Platform.UAP.TextBlockExtensions.cs line 78 'lineHeights.Add(lineHeight);'. The reason for that is 'defaultLineHeight' set to 0
                in LabelRenderer.UpdateText where heights are set to 0 to all spans within invisbl labels and TextBlockExtensions.RecalculateSpanPositions loop not accounting for that case
                -->
                <Label IsVisible="{Binding ShowCurrentSpeed}" Style="{StaticResource AccentedLabel}" VerticalOptions="Start" Grid.Column="3" LineBreakMode="NoWrap" WidthRequest="90">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding RecentResultMbps, Mode=OneWay, Converter={StaticResource MbPerSecondToAuto}}" />
                            <Span Text="{Binding RecentResultMbps, Mode=OneWay, Converter={StaticResource MbPerSecondToAutoUnit}}" Style="{StaticResource SmallSpan}" />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>

                <Label Text="{Binding ProgressPercent, StringFormat='{0:0}%'}" Style="{StaticResource GrayedLabel}" 
                    IsVisible="{Binding ShowTestStatusMessage, Converter={StaticResource BoolNot}}" WidthRequest="40" Grid.Column="4" LineBreakMode="TailTruncation"/>

            </ctrl:GridItem>
        </DataTemplate>
    </ctrl:GridRepeater.FooterTemplate>
</ctrl:GridRepeater>